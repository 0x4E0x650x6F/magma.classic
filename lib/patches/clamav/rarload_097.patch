reverted:
--- clamav/libclamav/others.c.orig	2010-11-03 07:11:25.000000000 -0500
+++ clamav/libclamav/others.c	2010-12-03 04:13:38.297252732 -0600
@@ -62,20 +62,21 @@
 #include "md5.h"
 #include "cltypes.h"
 #include "regex/regex.h"
 #include "ltdl.h"
 #include "matcher-ac.h"
 #include "default.h"
 #include "scanners.h"
 #include "bytecode.h"
 #include "bytecode_api_impl.h"
 
+#include <dlfcn.h>
 int (*cli_unrar_open)(int fd, const char *dirname, unrar_state_t *state);
 int (*cli_unrar_extract_next_prepare)(unrar_state_t *state, const char *dirname);
 int (*cli_unrar_extract_next)(unrar_state_t *state, const char *dirname);
 void (*cli_unrar_close)(unrar_state_t *state);
 int have_rar = 0;
 static int is_rar_initd = 0;
 
 static int warn_dlerror(const char *msg)
 {
     const char *err = lt_dlerror();
@@ -152,39 +153,48 @@
         return rhandle;
     }
 
     info = lt_dlgetinfo(rhandle);
     if (info)
 	cli_dbgmsg("%s support loaded from %s %s\n", featurename, info->filename ? info->filename : "?", info->name ? info->name : "");
     return rhandle;
 }
 
 static void cli_rarload(void) {
-    lt_dlhandle rhandle;
 
+	lt_dlhandle rhandle = NULL;
+
+  if(is_rar_initd) {
+  	return;
+  }
+
+  is_rar_initd = 1;
+
+  if (!(*(void **)(&cli_unrar_open) = (void *)dlsym((void *)0, "libclamunrar_iface_LTX_unrar_open")) ||
+		!(*(void **)(&cli_unrar_extract_next_prepare) = dlsym(NULL, "libclamunrar_iface_LTX_unrar_extract_next_prepare")) ||
+		!(*(void **)(&cli_unrar_extract_next) = dlsym(NULL, "libclamunrar_iface_LTX_unrar_extract_next")) ||
+		!(*(void **)(&cli_unrar_close) = dlsym(NULL, "libclamunrar_iface_LTX_unrar_close"))) {
+
+	  if (!(rhandle = lt_dlfind("libclamunrar_iface", "unrar"))) {
+	  	return;
+	  }
+
+	  if (!(cli_unrar_open = (int(*)(int, const char *, unrar_state_t *))lt_dlsym(rhandle, "libclamunrar_iface_LTX_unrar_open")) ||
+	  		!(cli_unrar_extract_next_prepare = (int(*)(unrar_state_t *, const char *))lt_dlsym(rhandle, "libclamunrar_iface_LTX_unrar_extract_next_prepare")) ||
+	  		!(cli_unrar_extract_next = (int(*)(unrar_state_t *, const char *))lt_dlsym(rhandle, "libclamunrar_iface_LTX_unrar_extract_next")) ||
+	  		!(cli_unrar_close = (void(*)(unrar_state_t *))lt_dlsym(rhandle, "libclamunrar_iface_LTX_unrar_close"))) {
+	  	cli_warnmsg("Cannot resolve: %s (version mismatch?) - unrar support unavailable\n", lt_dlerror());
+	  	return;
+	  }
+	}
-    if(is_rar_initd) return;
-    is_rar_initd = 1;
 
+	have_rar = 1;
-    rhandle = lt_dlfind("libclamunrar_iface", "unrar");
-    if (!rhandle)
-	return;
-
-    if (!(cli_unrar_open = (int(*)(int, const char *, unrar_state_t *))lt_dlsym(rhandle, "libclamunrar_iface_LTX_unrar_open")) ||
-	!(cli_unrar_extract_next_prepare = (int(*)(unrar_state_t *, const char *))lt_dlsym(rhandle, "libclamunrar_iface_LTX_unrar_extract_next_prepare")) ||
-	!(cli_unrar_extract_next = (int(*)(unrar_state_t *, const char *))lt_dlsym(rhandle, "libclamunrar_iface_LTX_unrar_extract_next")) ||
-	!(cli_unrar_close = (void(*)(unrar_state_t *))lt_dlsym(rhandle, "libclamunrar_iface_LTX_unrar_close"))
-	) {
-	/* ideally we should never land here, we'd better warn so */
-        cli_warnmsg("Cannot resolve: %s (version mismatch?) - unrar support unavailable\n", lt_dlerror());
-        return;
-    }
-    have_rar = 1;
 }
 
 void cl_debug(void)
 {
     cli_debug_flag = 1;
 }
 
 unsigned int cl_retflevel(void)
 {
     return CL_FLEVEL;
